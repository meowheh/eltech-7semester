/*Задание: Разработать программу, которая порождает 2 потомка.
Первый потом порождается с помощью fork, второй - с помощью vfork с последущей заменой на другую программу.
Все 3 процесса должны вывести в один файл свои атрибуты с предварительным указанием имени процесса.
Имя выходного файла задается при запуске программы. Порядок вывода атрибутов в файл должен определяться задержками процессов,
которые задаются в качестве параметров программы и выводятся в начало файла.*/

/*Сначала линкуем файл writeFile.cpp : g++ writeFile.cpp -o writeFile, потом уже main.cpp */

#include <iostream>
#include "body.h"
#include "sys/types.h"
using namespace std;

int main(){
     char nameFile[20],    //имя файла
          delayParent[3],  //задержка родителя в секундах
          delayVFork[3],   //задержка первого процесса vfork в секундах
          delayFork[3];    //задержка второго процесса fork в секундах
    //Вводим имя файла с консоли
    cout << "Введите имя файла: ";
    cin >> nameFile;
    //Вводим числа задержек с консоли
    cout << "Введите число задержки в секундах для родителя: ";
    cin >> delayParent;
    cout << "Введите число задержки в секундах для первого процесса: ";
    cin >> delayFork;
    cout << "Введите число задержки в секундах для второго процесса: ";
    cin >> delayVFork;
    //открываем файл nameFile, предварительно его очистив
    ofstream file(nameFile, ios_base::trunc);
    //если успешно его открыли
    if(file.is_open()){
        //записываем в него времена задержек
        file << "Задержки: " << delayParent << " " << delayFork << " " << delayVFork << "\n";
        //закрываем файл
        file.close();
        //создаем процесс с помощью fork()
        if(fork() == 0){
            //останавливаем процесс первого потомка с соответствии с введенным временем, другие процессы могут выполняться
             sleep(atoi(delayFork)); 
             //запускаем функцию body, которая записываем в файл информацию о процессе
             body(nameFile, "Потомок 1(fork)");

        }
        //создаем процесс с помощью vfork()
        else if (vfork() == 0){
            //инициализируем аргументы для передачи в функцию main программы writeFile
            char* argv[] = {nameFile, delayVFork, "Потомок 2 (vfork)", nullptr};
            //передаем управление в программу writeFile
            execv("./writeFile",argv);
        }
        else {
            //останавливаем процесс родителя с соответствии с введеным временем, другие процессы могут выполняться
            sleep(atoi(delayParent));
            //запускаем функцию body, которая записывает в файл информацию о процессе
            body(nameFile, "Родитель");
        }
    }
    else //если по каким-то причинам файл не удалось открыть - выводим сообщение об ошибке
        cout << "Не удалось создать файл!";     
    return 0;
}